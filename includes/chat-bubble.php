<?php

namespace Intercom_WP;

if (!defined('ABSPATH')) exit;

class Chat_Bubble
{

    protected $app_id, $secret, $enabled, $options, $script;

    public function __construct()
    {
        $this->app_id = false;
        $this->secret = false;
        $this->enabled = false;
        $this->script = false;
        $this->options = [];

        $this->setUp();

        add_action('wp_footer', [$this, 'html']);

    }

    private function setUp()
    {

        $this->options = get_option('intercom_wp_settings');

        if (!$this->options || empty($this->options)) return;

        $this->secret = isset($this->options['intercom_wp_intercom_secret']) ? $this->options['intercom_wp_intercom_secret'] : false;

        $this->app_id = isset($this->options['intercom_wp_intercom_app_id']) ? $this->options['intercom_wp_intercom_app_id'] : false;

        /* App ID Missing */
        if (!$this->app_id) {

            if (false === ($special_query_results = get_transient('iwp_app_id_warning'))) {

                $this->add_admin_notice(INTERCOM_WP_NAME . ' requires your App ID to output the chat bubble. Please enter your Intercom App ID.');

                set_transient('iwp_app_id_warning', true, DAY_IN_SECONDS);

            }

            $this->enabled = false;
        } else $this->enabled = true;

        /* Warn of missing verification secret */
        if (!$this->secret) {

            if (false === ($special_query_results = get_transient('iwp_app_secret_warning'))) {

                $this->add_admin_notice(INTERCOM_WP_NAME . ' strongly recommends you enable User Verification for Intercom by entering your Verification Secret');

                set_transient('iwp_app_secret_warning', true, DAY_IN_SECONDS * 7);

            }

        }

        /* Warn of duplicate chat bubble output */

        if ($this->is_chat_enabled() && in_array('intercom/bootstrap.php', (array)get_option('active_plugins', array()
            ))) {

            $this->add_admin_notice(INTERCOM_WP_NAME . ' is outputting the Intercom Chat Bubble and we have detected the official Intercom plugin is active. Please ensure only one plugin is outputting the Intercom chat bubble.');

        }

        return;
    }

    private function add_admin_notice($message)
    {

        add_action('admin_notices', function () use ($message) {

            $html_message = sprintf('<div class="notice notice-error">%s</div>', wpautop($message));

            echo wp_kses_post($html_message);

        });

    }

    private function is_chat_enabled()
    {

        return isset($this->options['enable_chat_bubble']) ? $this->options['enable_chat_bubble'] : false;
    }

    public function html()
    {

        $this->generate_snippet();

        if ($this->script) {

            echo apply_filters('iwp_chat_script_wrapper', "<!-- Generated by " . INTERCOM_WP_NAME . " -->") . $this->script;

            return;
        }

    }

    public function generate_snippet()
    {

        /*Check if enabled */

        if (!$this->is_chat_enabled() || !$this->enabled) return '';

        $settings = [];

        $script = '';

        /* Check if user verification is enabled */
        $verify = isset($this->options['enable_web_verification']) ? $this->options['enable_web_verification'] : false;

        $wp_user = wp_get_current_user();

        if ($verify && $wp_user != 0) {

            $verify_by = apply_filters('iwp_chat_verify_method', 'email');

            if ($verify_by == 'email') {

                $settings['email'] = $wp_user->user_email;

                $hash_key = $settings['email'];
            } else {

                $settings['user_id'] = apply_filters('iwp_chat_verify_user_id', $wp_user->ID);

                $hash_key = $settings['user_id'];
            }

            $settings['user_hash'] = hash_hmac('sha256', $hash_key, $this->secret);
        }

        $settings['app_id'] = $this->app_id;

        $settings = apply_filters('iwp_chat_bubble_settings', $settings, $wp_user);

        /* Generate Settings Script */

        $script = "<script>window.intercomSettings = {";

        foreach ($settings as $key => $value) {

            $script .= "$key: '$value', ";
        }

        $script = rtrim($script, ', ');

        $script .= "};</script>";

        /* Generate Main Script */

        $script .= "<script>
(function(){var w=window;var ic=w.Intercom;if(typeof ic==='function'){ic('reattach_activator');ic('update',w.intercomSettings);}else{var d=document;var i=function(){i.c(arguments);};i.q=[];i.c=function(args){i.q.push(args);};w.Intercom=i;var l=function(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/$this->app_id';var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);};if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})();
</script>";

        $this->script = apply_filters('iwp_final_chat_script', trim($script));

        return;

    }
}

?>